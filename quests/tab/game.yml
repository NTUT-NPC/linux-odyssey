id: tab
title: 學長的秘訣
image: base
instruction: |
  在這個關卡，你將會學到

  1. 如何使用 Tab 自動補全路徑
  2. 出現衝突時如何處理

  按下中間的按鈕來開始這個關卡。

requirements:
  - create

stages:
  - id: start
    name: 按下開始按鈕開始關卡
    condition:
      command: echo start
    response:
      content: |
        在終端機裡，所有的操作都是用文字進行。
        然而，打字很花時間，而且只要一個字打錯，指令就會執行失敗。
        學長偷偷教你一個秘訣：**Tab 自動補全**。

        在開始練習之前，我們先來看看家目錄下有哪些檔案。
      hint: 使用 `ls` 查看檔案列表

  - id: ls
    name: 使用 `ls` 查看檔案列表
    requirements:
      - start
    condition:
      command: ls
    response:
      content: |
        你看到了這個資料夾中充滿了超級長和有錯字的檔案名稱，如果這些都要我們一個一個字輸入，肯定會很痛苦。
        但不要緊，只要使用自動補全，檔名不論多長都能輕鬆輸入。

        使用自動補全的方法是，**先輸入部分的檔名，再按下 Tab**
        （Tab 是 Q 左邊的按鍵）
        例如要補全 `Constitution_NTUT_Programming_Club_Official_Document.txt`，你可以先輸入 `Co` 再按下 Tab，終端機就會幫你打完剩下的檔名了。

        我們試看看印出 `Constitution_NTUT_Programming_Club_Official_Document.txt` 這個檔案的內容。
      hint: |
        使用 `cat Constitution_NTUT_Programming_Club_Official_Document.txt` 來印出檔案內容
        在輸入 `cat Co` 之後按下 Tab 來自動補全檔名，完成後按 Enter 就能執行指令

  - id: cat_super_secret
    name: 使用 `cat` 印出 Constitution_NTUT_Programming_Club_Official_Document.txt 的內容
    requirements:
      - ls
    condition:
      pwd: /home/commander
      command: cat Constitution_NTUT_Programming_Club_Official_Document.txt
    response:
      content: |
        你看到了終端機自動幫你補全了 `Constitution_NTUT_Programming_Club_Official_Document.txt`，就算是很長的檔名，也不用怕打錯字。
        開頭不論你打了幾個字都無所謂，你可以只打 `C`、`Co`、`Con`、`Cons` 或甚至完全不打字都沒關係。
        但是你打的字越少，就越容易跟其他的檔案重複，這時候就要做衝突處理。
        關於衝突處理，我們會在待會練習。

        自動補全也可以用來對付拼字錯誤，像是 `BudgetRprtWthTyposAndMstaksThatAreHardToRead.txt` 這個檔案充滿了錯字，任誰來打都難保不會失手。
        這一次，請你一樣用 `cat` 來試著印出 `BudgetRprtWthTyposAndMstaksThatAreHardToRead.txt` 的內容。
      hint: |
        輸入 `cat BudgetRprtWthTyposAndMstaksThatAreHardToRead.txt` 來印出檔案內容
        輸入 `cat Bu` 之後按下 Tab 做自動補全
        試試看輸入更少的字元就按 Tab 會有什麼樣的結果

  - id: cat_typo
    name: 使用 `cat` 印出 BudgetRprtWthTyposAndMstaksThatAreHardToRead.txt 的內容
    requirements:
      - cat_super_secret
    condition:
      pwd: /home/commander
      command: cat BudgetRprtWthTyposAndMstaksThatAreHardToRead.txt
    response:
      content: |
        你看到了這個充滿錯字的NTUT程式設計社預算報告檔案了。
        只要使用自動補全，不管是錯字、大小寫變化、還是隨機亂碼都不再是困擾了。
        讓我們再練習一個，這次請你查看 `Events_and_Documents_Archive` 資料夾中的檔案。
        一樣，輸入前幾個字，然後按 Tab 自動補全。
      hint: |
        輸入 `ls Events_and_Documents_Archive` 查看資料夾中的檔案
        輸入 `ls Ev` 之後按下 Tab 做自動補全

  - id: ls_things
    name: 使用 `ls` 查看 Events_and_Documents_Archive 資料夾中的檔案
    requirements:
      - cat_typo
    condition:
      pwd: /home/commander
      command: ls Events_and_Documents_Archive
    exceptions:
      - id: not_in_home
        condition:
          not:
            pwd: /home/commander
        response:
          content: |
            請留在 `/home/commander` 資料夾中。
            請輸入 `cd ~` 回到 `/home/commander` 資料夾。
    response:
      content: |
        你看到了這個資料夾裡有著三個檔案：一個程式設計社活動企劃書跟兩個社員名單檔案。
        假如我們要打開活動企劃書 `HowToOrganizeAProgrammingWorkshop.txt`，但是它位在資料夾中，我們沒辦法只按一次 Tab 就補全它的檔名。
        這次我們就要來練習使用**連續的自動補全**。

        像這樣檔案位在其他資料夾的情況，我們只要先輸入資料夾名稱的開頭，按一次 Tab，再輸入檔案的開頭，再按一次 Tab，就能夠補全 `資料夾/檔名` 了。
        而且當你補全的對象是資料夾時，終端機還會自動幫你在結尾加上 `/`，省去你自己輸入的時間。
        那麼我們就來打開 `HowToOrganizeAProgrammingWorkshop.txt`。
      hint: |
        輸入 `cat Events_and_Documents_Archive/HowToOrganizeAProgrammingWorkshop.txt` 來印出檔案內容
        先輸入 `cat Ev` 按 Tab 補全至 `cat Events_and_Documents_Archive/`
        再輸入 `cat Events_and_Documents_Archive/Ho` 按 Tab 補全至完整路徑

  - id: cat_sandwich
    name: 使用 `cat` 印出 Events_and_Documents_Archive/HowToOrganizeAProgrammingWorkshop.txt 的內容
    requirements:
      - ls_things
    condition:
      command: cat Events_and_Documents_Archive/HowToOrganizeAProgrammingWorkshop.txt
    exceptions:
      - id: not_in_home
        condition:
          not:
            pwd: /home/commander
        response:
          content: |
            請留在 `/home/commander` 資料夾中。
            請輸入 `cd ~` 回到 `/home/commander` 資料夾。
    response:
      content: |
        你看到了這份詳細的程式設計工作坊企劃指南。
        那我們剩下來要看的就是資料夾裡的兩個檔案：`ProvisionalMembersListFirstEvent.txt` 和 `ProvisionalMembersListFreshmanCamp.txt`
        兩個檔名代表不同時期加入的預備社員，一個是第一次活動的預備社員名單，另一個是迎新宿營的預備社員名單。
        這樣我們只打前面幾個字的時候，沒有辦法分辦到底選的是哪一個檔案。
        這就是**發生衝突**。

        遇到衝突的解決方法，其實跟使用資料夾是一樣的。
        在輸入 `Prov` 按下 Tab 後，終端機會補全到衝突發生前的位置，也就是 `ProvisionalMembersList`。
        我們只要根據我們想開啟的檔案，輸入 `Fi` 或是 `Fr`，再按一下 Tab，就能夠補全剩下的檔名了。

      hint: |
        印出 `Events_and_Documents_Archive/ProvisionalMembersListFirstEvent.txt` 的檔案內容
        先輸入 `cat Ev` 按 Tab 補全至 `cat Events_and_Documents_Archive/`
        再接續輸入 `Prov` 按 Tab 補全至 `cat Events_and_Documents_Archive/ProvisionalMembersList`
        再接續輸入 `Fi` 後按 Tab 補全至完整的路徑。

  - id: cat_3am
    name: 使用 `cat` 印出 Events_and_Documents_Archive/ProvisionalMembersListFirstEvent.txt 的內容
    requirements:
      - cat_sandwich
    condition:
      pwd: /home/commander
      command: cat Events_and_Documents_Archive/ProvisionalMembersListFirstEvent.txt
    exceptions:
      - id: not_in_home
        condition:
          not:
            pwd: /home/commander
        response:
          type: narrative
          content: |
            請留在 `/home/commander` 資料夾中。
            請輸入 `cd ~` 回到 `/home/commander` 資料夾。
    response:
      content: |
        你看到了第一次活動時加入的預備社員名單。這些都是對程式設計有興趣想進一步了解的同學！
        最後留下一個挑戰給你，請先進入到 `Events_and_Documents_Archive` 資料夾後，再印出 `ProvisionalMembersListFreshmanCamp.txt`。
        練習使用今天教的自動補全來完成任務。
      hint: |
        先使用 `cd` 進入 Events_and_Documents_Archive 資料夾
        再使用 `cat` 印出 ProvisionalMembersListFreshmanCamp.txt 的內容
        記得使用 Tab 自動補全來節省時間和避免錯誤

  - id: cd_things
    name: 使用 `cd` 進入 Events_and_Documents_Archive 資料夾
    requirements:
      - cat_3am
    condition:
      pwd: /home/commander/Events_and_Documents_Archive
    response:
      content: |
        很好，你已經成功進入 Events_and_Documents_Archive 資料夾了。
        現在請使用 `cat` 指令來印出 `ProvisionalMembersListFreshmanCamp.txt` 的內容。
        記得運用 Tab 自動補全功能！

  - id: END
    name: 使用 `cat` 印出 ProvisionalMembersListFreshmanCamp.txt 的內容
    requirements:
      - cd_things
    condition:
      pwd: /home/commander/Events_and_Documents_Archive
      command: cat ProvisionalMembersListFreshmanCamp.txt
    response:
      content: |
        恭喜你！你已經成功完成了所有的任務，並且熟練地運用了 Tab 自動補全功能。
        這個技能將會在你未來的終端機操作中帶來極大的便利。
        記住，不論是長檔名、複雜路徑，還是難以拼寫的檔案名稱，Tab 自動補全都是你的好幫手！
      hint: 你已經完成了所有任務！可以繼續探索或是結束這個關卡。